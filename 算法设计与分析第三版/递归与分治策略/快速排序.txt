package com.cxx.solution.partition;

import java.util.Arrays;

/**
 * 快速排序
 */
public class Solution5 {
    public static void main(String[] args) {
        int[] arr = new int[]{49, 38, 65, 97, 76, 13, 27};
        quickSort(arr, 0, arr.length - 1);
        System.out.println(Arrays.toString(arr));
    }

    private static void quickSort(int[] arr, int start, int end) {
        if (start >= end) return;
        int pivot = getIndex(arr, start, end);
        quickSort(arr, start, pivot - 1);
        quickSort(arr, pivot + 1, end);
    }

    private static int getIndex(int[] arr, int start, int end) {
        int base_element = arr[start];
        while (start < end) {
            while (start < end && arr[end] >= base_element) end--; //从后往前找比基准值小的，一旦找到就跳出循环
            arr[start] = arr[end];
            while (start < end && arr[start] <= base_element) start++;//从前往后找比基准值大的
            arr[end] = arr[start];
        }
        arr[start] = base_element;
        return start;
    }

}
